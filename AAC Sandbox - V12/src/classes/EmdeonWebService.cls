//Generated by wsdl2apex

public class EmdeonWebService {
    public class RunTransactionResponse_element {
        public String RunTransactionResult;
        private String[] RunTransactionResult_type_info = new String[]{'RunTransactionResult','http://www.w3.org/2001/XMLSchema','base64Binary','0','1','false'};
        private String[] apex_schema_type_info = new String[]{'https://ra.emdeon.com/AstWebService/','true','false'};
        private String[] field_order_type_info = new String[]{'RunTransactionResult'};
    }
    public class RunTransaction_element {
        public String UserName;
        public String Password;
        public String Request;
        private String[] UserName_type_info = new String[]{'UserName','http://www.w3.org/2001/XMLSchema','string','0','1','false'};
        private String[] Password_type_info = new String[]{'Password','http://www.w3.org/2001/XMLSchema','string','0','1','false'};
        private String[] Request_type_info = new String[]{'Request','http://www.w3.org/2001/XMLSchema','base64Binary','0','1','false'};
        private String[] apex_schema_type_info = new String[]{'https://ra.emdeon.com/AstWebService/','true','false'};
        private String[] field_order_type_info = new String[]{'UserName','Password','Request'};
    }
    public class AWSSoap 
    {
        public String endpoint_x = 'https://ra.emdeon.com/astwebservice/aws.asmx';
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'https://ra.emdeon.com/AstWebService/', 'EmdeonWebService'};
        public String RunTransaction(String UserName,String Password,String Request) {
            EmdeonWebService.RunTransaction_element request_x = new EmdeonWebService.RunTransaction_element();
            EmdeonWebService.RunTransactionResponse_element response_x;
            request_x.UserName = UserName;
            request_x.Password = Password;
            request_x.Request = Request;
            Map<String, EmdeonWebService.RunTransactionResponse_element> response_map_x = new Map<String, EmdeonWebService.RunTransactionResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'https://ra.emdeon.com/AstWebService/RunTransaction',
              'https://ra.emdeon.com/AstWebService/',
              'RunTransaction',
              'https://ra.emdeon.com/AstWebService/',
              'RunTransactionResponse',
              'EmdeonWebService.RunTransactionResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.RunTransactionResult;
        }
    }
   
   
   private static testMethod void TestEmdeonWebService()
   {
   	 Test.setMock(WebServiceMock.class, new EmdeonWebService.MyWebServiceMock());
   	 Test.startTest();
   	 EmdeonWebService.AWSSoap service = new EmdeonWebService.AWSSoap();
   	 service.timeout_x = 90000;
   	 service.RunTransaction('Test', 'Test', 'Test;test;test;test');
 	 Test.stopTest();
   }
   public class MyWebServiceMock implements WebServiceMock 
   {
       public void doInvoke(
                            Object stub,
                            Object request,
                            Map<String, Object> response,
                            String endpoint,
                            String soapAction,
                            String requestName,
                            String responseNS,
                            String responseName,
                            String responseType) 
                            {        
                            // Create response element from the autogenerated class.        
                            // Populate response element.        
                            // Add response element to the response parameter, as follows:
                            RunTransactionResponse_element respElement = new RunTransactionResponse_element();
                            respElement.RunTransactionResult = 'test result';
                            response.put('response_x', respElement);
                            }
   }
}